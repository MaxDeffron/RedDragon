# Generated by Django 4.1 on 2022-09-10 09:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Название категории')),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категория',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Название производителя')),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производитель',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Название типа памяти')),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Тип памяти',
                'verbose_name_plural': 'Тип памяти',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Power',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Название типа кабеля питания')),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Кабель питания',
                'verbose_name_plural': 'Кабель питания',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Название графического процессора')),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Графический процессор',
                'verbose_name_plural': 'Графический процессор',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Сonnector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Название типа видеоразъема')),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Видеоразъем',
                'verbose_name_plural': 'Видеоразъем',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название видеокарты')),
                ('hashrate', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Хешрейт')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Цена')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Вес')),
                ('lhr', models.BooleanField(default=True, verbose_name='да')),
                ('videomemory', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Объем видеопамяти')),
                ('frequency', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Объем видеопамяти')),
                ('cooler', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Объем видеопамяти')),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d', verbose_name='Фото')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('length', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Длина')),
                ('height', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Высота')),
                ('width', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Ширина')),
                ('price_2', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Цена у конкурентов')),
                ('action', models.BooleanField(default=True, verbose_name='Акция')),
                ('new', models.BooleanField(default=True, verbose_name='Новая')),
                ('slug', models.CharField(db_index=True, max_length=200)),
                ('available', models.BooleanField(default=True, verbose_name='Наличие')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='card.category', verbose_name='Выберете категорию')),
                ('connector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='card.сonnector', verbose_name='Выберете видеоразъем')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='card.manufacturer', verbose_name='Выберете производителя графического процессора')),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='card.memory', verbose_name='Выберете тип памяти')),
                ('power', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='card.power', verbose_name='Выберете бренд')),
                ('processor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='card.processor', verbose_name='Выберете графический процессор')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ('name',),
                'index_together': {('id', 'slug')},
            },
        ),
    ]
